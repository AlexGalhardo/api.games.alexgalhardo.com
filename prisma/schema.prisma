generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Users {
  id                                     String    @id @default(uuid())
  username                               String
  email                                  String    @unique
  telegram_number                        String?   @unique
  jwt_token                              String?   @unique
  api_key                                String?   @unique
  api_requests_today                     Int       @default(0)
  date_last_api_request                  String?
  password                               String
  reset_password_token                   String?   @unique
  reset_password_token_expires_at        String?
  stripe_customer_id                     String?   @unique
  stripe_subscription_active             Boolean   @default(false)
  stripe_subscription_name               String?   @default("NOOB")
  stripe_subscription_starts_at          String?
  stripe_subscription_ends_at            String?
  stripe_subscription_charge_id          String?   @unique
  stripe_subscription_receipt_url        String?   @unique
  stripe_subscription_hosted_invoice_url String?   @unique
  stripe_updated_at                      String?
  stripe_updated_at_pt_br                String?
  created_at                             String
  updated_at                             String?
  created_at_pt_br                       String
  updated_at_pt_br                       String?

  @@unique(fields: [email, reset_password_token], name: "resetPasswordTokenIsValid")
  @@map("users")
}

model Games {
  id                  String  @id @default(uuid())
  title               String  @unique
  slug                String  @unique
  cover_image         String  @unique
  summary             String
  release_year        Int @default(2030)
  igdb_id             Int @unique
  igdb_url            String @unique
  igdb_rating         Int
  developer_id        Int
  developer_name      String
  developer_slug      String
  publisher_id        Int
  publisher_name      String
  publisher_slug      String
  platforms_available Json
  genres              Json

  @@map("games")
}

model StripeWebhookBillingPortalLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_billing_portal_logs")
}

model StripeWebhookChargesLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_charges_logs")
}

model StripeWebhookCheckoutsLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_checkouts_logs")
}

model StripeWebhookCustomersLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_customers_logs")
}

model StripeWebhookInvoicesLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_invoices_logs")
}

model StripeWebhookPaymentsLogs {
  id         String    @id @default(uuid())
  event_log  Json
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("stripe_webhook_payments_logs")
}
